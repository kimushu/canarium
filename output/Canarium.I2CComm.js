Ext.data.JsonP.Canarium_I2CComm({"tagname":"class","name":"Canarium.I2CComm","autodetected":{},"files":[{"filename":"canarium.js","href":"canarium.html#Canarium-I2CComm"}],"uses":["Canarium.BaseComm"],"members":[{"name":"I2C_TIMEOUT_MS","tagname":"property","owner":"Canarium.I2CComm","id":"property-I2C_TIMEOUT_MS","meta":{"private":true,"readonly":true}},{"name":"_base","tagname":"property","owner":"Canarium.I2CComm","id":"property-_base","meta":{"private":true}},{"name":"I2CComm","tagname":"method","owner":"Canarium.I2CComm","id":"method-I2CComm","meta":{}},{"name":"_readBit","tagname":"method","owner":"Canarium.I2CComm","id":"method-_readBit","meta":{"private":true}},{"name":"_writeBit","tagname":"method","owner":"Canarium.I2CComm","id":"method-_writeBit","meta":{"private":true}},{"name":"read","tagname":"method","owner":"Canarium.I2CComm","id":"method-read","meta":{}},{"name":"start","tagname":"method","owner":"Canarium.I2CComm","id":"method-start","meta":{}},{"name":"stop","tagname":"method","owner":"Canarium.I2CComm","id":"method-stop","meta":{}},{"name":"write","tagname":"method","owner":"Canarium.I2CComm","id":"method-write","meta":{}},{"name":"_tryActions","tagname":"method","owner":"Canarium.I2CComm","id":"static-method-_tryActions","meta":{"private":true,"static":true}}],"alternateClassNames":[],"aliases":{},"id":"class-Canarium.I2CComm","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"html":"<div><pre class=\"hierarchy\"><h4>Uses</h4><div class='dependency'><a href='#!/api/Canarium.BaseComm' rel='Canarium.BaseComm' class='docClass'>Canarium.BaseComm</a></div><h4>Files</h4><div class='dependency'><a href='source/canarium.html#Canarium-I2CComm' target='_blank'>canarium.js</a></div></pre><div class='doc-contents'><p>PERIDOTボードI2C通信クラス</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-I2C_TIMEOUT_MS' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Canarium.I2CComm'>Canarium.I2CComm</span><br/><a href='source/canarium.html#Canarium-I2CComm-property-I2C_TIMEOUT_MS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Canarium.I2CComm-property-I2C_TIMEOUT_MS' class='name expandable'>I2C_TIMEOUT_MS</a> : number<span class=\"signature\"><span class='private' >private</span><span class='readonly' >readonly</span></span></div><div class='description'><div class='short'><p>I2C通信のタイムアウト時間</p>\n</div><div class='long'><p>I2C通信のタイムアウト時間</p>\n</div></div></div><div id='property-_base' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Canarium.I2CComm'>Canarium.I2CComm</span><br/><a href='source/canarium.html#Canarium-I2CComm-property-_base' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Canarium.I2CComm-property-_base' class='name expandable'>_base</a> : <a href=\"#!/api/Canarium.BaseComm\" rel=\"Canarium.BaseComm\" class=\"docClass\">Canarium.BaseComm</a><span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'><p>下位層通信クラスのインスタンス</p>\n</div><div class='long'><p>下位層通信クラスのインスタンス</p>\n</div></div></div></div></div><div class='members-section'><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Instance methods</h3><div id='method-I2CComm' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Canarium.I2CComm'>Canarium.I2CComm</span><br/><a href='source/canarium.html#Canarium-I2CComm-method-I2CComm' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Canarium.I2CComm-method-I2CComm' class='name expandable'>I2CComm</a>( <span class='pre'>_base</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>コンストラクタ ...</div><div class='long'><p>コンストラクタ</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>_base</span> : <a href=\"#!/api/Canarium.BaseComm\" rel=\"Canarium.BaseComm\" class=\"docClass\">Canarium.BaseComm</a><div class='sub-desc'><p>下位層通信クラスのインスタンス</p>\n</div></li></ul></div></div></div><div id='method-_readBit' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Canarium.I2CComm'>Canarium.I2CComm</span><br/><a href='source/canarium.html#Canarium-I2CComm-method-_readBit' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Canarium.I2CComm-method-_readBit' class='name expandable'>_readBit</a>( <span class='pre'>callback</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>1ビットリード\n  (必ずSCL='L'が先行しているものとする) ...</div><div class='long'><p>1ビットリード\n  (必ずSCL='L'が先行しているものとする)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : function(boolean,number)<div class='sub-desc'><p>コールバック関数</p>\n</div></li></ul></div></div></div><div id='method-_writeBit' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Canarium.I2CComm'>Canarium.I2CComm</span><br/><a href='source/canarium.html#Canarium-I2CComm-method-_writeBit' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Canarium.I2CComm-method-_writeBit' class='name expandable'>_writeBit</a>( <span class='pre'>bit, callback</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>1ビットライト\n  (必ずSCL='L'が先行しているものとする) ...</div><div class='long'><p>1ビットライト\n  (必ずSCL='L'が先行しているものとする)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>bit</span> : 0/1<div class='sub-desc'>\n</div></li><li><span class='pre'>callback</span> : function(boolean)<div class='sub-desc'><p>コールバック関数</p>\n</div></li></ul></div></div></div><div id='method-read' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Canarium.I2CComm'>Canarium.I2CComm</span><br/><a href='source/canarium.html#Canarium-I2CComm-method-read' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Canarium.I2CComm-method-read' class='name expandable'>read</a>( <span class='pre'>ack, callback</span> ) : void<span class=\"signature\"></span></div><div class='description'><div class='short'>バイトリード\n  (必ずSCL='L'が先行しているものとする) ...</div><div class='long'><p>バイトリード\n  (必ずSCL='L'が先行しているものとする)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ack</span> : boolean<div class='sub-desc'><p>ACK返却の有無(true:ACK, false:NAK)</p>\n</div></li><li><span class='pre'>callback</span> : function(boolean, Number):void<div class='sub-desc'><p>コールバック関数\n  function(boolean:通信成否, Number:読み込みデータ(0～255))</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-start' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Canarium.I2CComm'>Canarium.I2CComm</span><br/><a href='source/canarium.html#Canarium-I2CComm-method-start' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Canarium.I2CComm-method-start' class='name expandable'>start</a>( <span class='pre'>callback</span> ) : void<span class=\"signature\"></span></div><div class='description'><div class='short'>スタートコンディションの送信 ...</div><div class='long'><p>スタートコンディションの送信</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : function(boolean):void<div class='sub-desc'><p>コールバック関数</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-stop' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Canarium.I2CComm'>Canarium.I2CComm</span><br/><a href='source/canarium.html#Canarium-I2CComm-method-stop' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Canarium.I2CComm-method-stop' class='name expandable'>stop</a>( <span class='pre'>callback</span> ) : void<span class=\"signature\"></span></div><div class='description'><div class='short'>ストップコンディションの送信\n  (必ずSCL='L'が先行しているものとする) ...</div><div class='long'><p>ストップコンディションの送信\n  (必ずSCL='L'が先行しているものとする)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : function(boolean):void<div class='sub-desc'><p>コールバック関数</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-write' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Canarium.I2CComm'>Canarium.I2CComm</span><br/><a href='source/canarium.html#Canarium-I2CComm-method-write' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Canarium.I2CComm-method-write' class='name expandable'>write</a>( <span class='pre'>writebyte, callback</span> ) : void<span class=\"signature\"></span></div><div class='description'><div class='short'>バイトライト\n  (必ずSCL='L'が先行しているものとする) ...</div><div class='long'><p>バイトライト\n  (必ずSCL='L'が先行しているものとする)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>writebyte</span> : number<div class='sub-desc'><p>書き込むデータ(0～255)</p>\n</div></li><li><span class='pre'>callback</span> : function(boolean, boolean):void<div class='sub-desc'><p>コールバック関数\n  function(boolean:通信成否, boolean:ACK受信有無)</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static methods</h3><div id='static-method-_tryActions' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Canarium.I2CComm'>Canarium.I2CComm</span><br/><a href='source/canarium.html#Canarium-I2CComm-static-method-_tryActions' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Canarium.I2CComm-static-method-_tryActions' class='name expandable'>_tryActions</a>( <span class='pre'>actions, callback, timeout, [period]</span> ) : void<span class=\"signature\"><span class='private' >private</span><span class='static' >static</span></span></div><div class='description'><div class='short'>タイムアウト付きで非同期アクション(複数可)を試行する ...</div><div class='long'><p>タイムアウト付きで非同期アクション(複数可)を試行する</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>actions</span> : Function[]<div class='sub-desc'><p>実行するアクションの配列(完了,中止,リトライの3つのコールバック関数を引数とする)</p>\n</div></li><li><span class='pre'>callback</span> : function(boolean)<div class='sub-desc'><p>すべてのアクションが完了したときのコールバック関数</p>\n</div></li><li><span class='pre'>timeout</span> : number<div class='sub-desc'><p>1アクション当たりのタイムアウト時間\n  (window.performance.nowにより経過時間で計測される)</p>\n</div></li><li><span class='pre'>period</span> : number (optional)<div class='sub-desc'><p>リトライ周期(省略時は0ms…最小待ち)</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});